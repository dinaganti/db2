#!/bin/bash
#
# Source environment variables

if [[ -z "$CFGHOME" ]] ; then
   source /root/bin/config/setenvvars
fi

#put messages to screen as well as in a file
exec &> >(while read line; do echo "$line" | logger_info; done;)
#exec &> >(tee -ia $LOGFILE)
#exec &> | logger_info

logger_info "Starting the work ..."

if  [ ! -f $FIRST_BOOT_FLAG ] ; then
   echo ===================================================
   echo $(date +"%D %T.%3N") This is the first run of container
   echo ===================================================
   if [[ ! -x $TIMEZONE ]] ; then
       timedatectl set-timezone $TIMEZONE
   fi
   touch $FIRST_BOOT_FLAG
   $SETHOME/createUsersAndDir
   if [[ $? -eq 1 ]] ; then
      echo $SETHOME/createUsersAndDir has errors. Exiting...
      exit 1
   fi
   echo Copy setenvvars to the home directory of root
   $CP -f $CFGHOME/setenvvars /root/.setenvvars
   echo Add to the .bashrc file of the  root
   if ! grep -qs setenvvars /root/.bashrc; then
      echo "if [[ -f .setenvvars ]] ; then" >> /root/.bashrc
      echo "  . ./.setenvvars"              >> /root/.bashrc
      echo "fi"                             >> /root/.bashrc
   fi
   echo Copy setenvvars to the home directory of the $INST_USER
   $CP -f $CFGHOME/setenvvars $DB2MOUNT/home/$INST_USER/.setenvvars
   chown $INST_USER.$INST_GROUP $DB2MOUNT/home/$INST_USER/.setenvvars
   echo Add to the .bashrc file of the $INST_USER user
   if ! grep -qs setenvvars $DB2MOUNT/home/$INST_USER/.bashrc; then
      echo "if [[ -f .setenvvars ]] ; then" >> $DB2MOUNT/home/$INST_USER/.bashrc
      echo "  . ./.setenvvars"              >> $DB2MOUNT/home/$INST_USER/.bashrc
      echo "fi"                             >> $DB2MOUNT/home/$INST_USER/.bashrc
   fi
   $SETHOME/createInstance
   if [[ $? -eq 1 ]] ; then
      echo $SETHOME/createInstance has errors. Exiting...
      exit 1
   fi
   $SETHOME/creategsk8
   su - $INST_USER -c "db2iauto -on $INST_USER"
   if [[ $? -eq 1 ]] ; then
      echo $SETHOME/creategsk8 has errors. Exiting...
      exit 1
   fi
else
   echo Container already initialized with Db2. Nothing to be done.
fi

# Check if database already exists in persistent volumes

if [[ ! -d $DB2MOUNT/db2data/dbpath/$INST_USER/NODE0000/$DB_NAME ]] ; then
   $SETHOME/createDatabaseDDL
   $CP -f $SETHOME/createDatabase $DB2MOUNT/config/
   chown $INST_USER.$INST_GROUP $DB2MOUNT/config/createDatabase
   chmod 755 $DB2MOUNT/config/createDatabase
   if [[ $? -eq 1 ]] ; then
      echo $DB2MOUNT/config/createDatabase has errors. Exiting...
      exit 1
   fi
   su - $INST_USER -c "$DB2MOUNT/config/createDatabase $DB_NAME"
else
   echo Database $DB_NAME already exists. Nothing to be done.
fi

/bin/cp -f $SETHOME/startInstance /tmp
chown $INST_USER.$INST_GROUP /tmp/startInstance
su - $INST_USER -c "/tmp/startInstance"
su - $INST_USER -c "db2 activate database $DB_NAME"

echo $(date +"%D %T.%3N") == DONE ==

logger_info "Ending work ... "
